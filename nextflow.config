/*
*----------------------------------------------------------
* Configuration file for testing 
* and verifying the pipeline runs with minimal dataset
*-----------------------------------------------------------
* defines all required input files to test the funtionality of the pipeline
*/

/*
* use the following script to run the pipeline 
	* for 'mbbu/AAT-project', run the pipeline as described

		* nextflow run -C test.config mbbu/AAT-project -profile <docker/singularity>

	* for 'mbbu/Assessing-Variant-Calling-Pipelines', run the pipeline with the command;
	
		* nextflow run -C test.config mbbu/Assessing-Variant-Calling-Pipelines -profile <docker/singularity>
	
*/

// Set parameters
  params{
	  outdir = "./Results"
   	  reads = ""
   	  adapter = ""
  	  genome = "https://raw.githubusercontent.com/okeyoallan/variant-calling-pipeline/main/ref_genome/ecoli_rel606.fasta"
   	  variants = "https://raw.githubusercontent.com/okeyoallan/variant-calling-pipeline/main/vcf/SRR2589044_final_variants.vcf"
   	  tracedir = "${outdir}/TraceDir"
	  snpeffdb = "Escherichia_coli_gca_001284745"
	  report = "${outdir}/Pipeline_report"
	  slidewindow = '4:20'
	  qualdepthvalue = '100'
}

// define input parameters for the workflow
/*	outdir = params.outdir
	genome = params.genome
	reads = params.reads
	variants = params.variants
	adapater = params.adapter
	tracedir = params.tracedir
	snpeffdb = params.snpeffdb
	report = params.report
*/
 // Define required resources 
	  max_cpus = 2
  	  max_memory = 8.GB
	  max_time = 48.h

// define process profiles 

	manifest {
  name = "GATK_Variant_Calling" 
  author = "Hebrew, Rose, Allan, Joyce"
  homePage = 'https://github.com/mbbu/AAT-project'
  description = "Variant calling pipeline using GATK"
  mainScript = 'main.nf'
  nextflowVersion = '>=20.04.0'

		}


// workflow report

          report {
                   report.enabled = true
                   file = '${report}/report.html'
                   overwrite = true
                }
		
// include additional pipeline parameters
trace {
        enabled = true
        file = "${params.tracedir}/trace_report.txt"
        }
timeline {
        enabled = true
        file = "${params.report}/pipeline_report.html"
        overwrite = true
        }
dag {
        enabled = true
        file = "${params.report}/dag_graph.png"
        }

// pipeline profiles 

	profiles {
	
        standard {
                process.container =  "quay.io/aokeyo/gatk4"
                }
		
       conda {
		conda.enabled = true
		docker.enabled = false
		singularity.enabled =false
		process.conda = "./environment.yml"
              }
	      
        docker {
                process.container =  "quay.io/aokeyo/gatk4"
                docker.enabled = true
		conda.enabled = false
		singularity.enabled = false
                }
        singularity {
                process.container =  "quay.io/aokeyo/gatk4"
                singularity.enabled = true
		conda.enabled = false
		docker.enabled = false
                }
        batch {
                process.container =  "quay.io/aokeyo/gatk4"
                process.memory = 20.GB
                process.queue = "sbatch"
                process.executor = "slurm"
                process.cpu = 8
                }
        }

